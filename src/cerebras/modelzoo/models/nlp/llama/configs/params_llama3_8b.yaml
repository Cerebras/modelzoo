# LLaMa v3 model, 8B parameters, max_seq_length 8192

trainer:
  init:
    backend:
      backend_type: CSX
    seed: 1
    model:
      name: "llama"
      # Embedding
      vocab_size: 128256
      hidden_size: 4096
      position_embedding_type: rotary
      pos_scaling_factor: 1.0
      rope_theta: 500000.0
      rotary_dim: 128
      share_embedding_weights: false
      max_position_embeddings: 8192
      embedding_dropout_rate: 0.0
      embedding_layer_norm: false
      # Decoder
      num_hidden_layers: 32
      dropout_rate: 0.0
      layer_norm_epsilon: 1.0e-05
      norm_type: rmsnorm
      # Decoder - Attention
      num_heads: 32
      attention_type: scaled_dot_product
      attention_module: multiquery_attention
      attention_dropout_rate: 0.0
      use_projection_bias_in_attention: false
      use_ffn_bias_in_attention: false
      extra_attention_params:
        num_kv_groups: 8
      # Decoder - ffn
      filter_size: 14336
      nonlinearity: swiglu
      use_ffn_bias: false
      # Task-specific
      use_bias_in_output: false
      loss_scaling: num_tokens
      loss_weight: 1.0
      # Initializer
      initializer_range: 0.02
      # Cerebras parameters
      mixed_precision: true
      fp16_type: cbfloat16
    optimizer:
      AdamW:
        betas:
        - 0.9
        - 0.95
        correct_bias: true
        weight_decay: 0.1
    schedulers:
    - SequentialLR:
        schedulers:
        - CosineDecayLR:
            initial_learning_rate: 0
            end_learning_rate: 0.0003
            total_iters: 90
        - CosineDecayLR:
            initial_learning_rate: 0.0003
            end_learning_rate: 3.0e-05
            total_iters: 4678
    precision:
      # Cerebras parameters
      enabled: true
      fp16_type: cbfloat16
      precision_opt_level: 1
      loss_scaling_factor: dynamic
      max_gradient_norm: 1.0
      log_loss_scale: true
    loop:
      max_steps: 10000
      eval_steps: 2
    checkpoint:
      steps: 10000
      disable_strict_checkpoint_loading: true
      save_initial_checkpoint: false
    logging:
      log_steps: 1
    callbacks:
    - ScopedTrainFlags:
        csx.performance.micro_batch_size: 20
    - ScopedValidateFlags:
        csx.performance.micro_batch_size: 20
    - ComputeNorm: {}
    - LoadCheckpointStates:
        load_checkpoint_states: model
  fit:
    train_dataloader:
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./llama_v3_dataset_vocab128256/train
      batch_size: 80
      shuffle: false
      shuffle_seed: 1337
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true  # Important to avoid seeding at each epoch
    val_dataloader: &val_dataloader
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./llama_v3_dataset_vocab128256/val
      batch_size: 80
      shuffle: false
      shuffle_seed: 1337
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true
  validate:
    val_dataloader: *val_dataloader
  validate_all:
    val_dataloaders: *val_dataloader
