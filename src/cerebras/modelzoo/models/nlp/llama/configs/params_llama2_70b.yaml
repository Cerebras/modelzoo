# LLaMa v2 model, 70B parameters, max_seq_length 4096
# Based on: https://arxiv.org/pdf/2307.09288.pdf

trainer:
  init:
    backend:
      backend_type: CSX
    model_dir: ./model_dir
    seed: 1
    model:
      name: "llama"
      # Embedding
      vocab_size: 32000
      hidden_size: 8192
      position_embedding_type: rotary
      rotary_dim: 128
      share_embedding_weights: false
      max_position_embeddings: 4096
      embedding_dropout_rate: 0.0
      # Decoder
      num_hidden_layers: 80
      dropout_rate: 0.0
      layer_norm_epsilon: 1.0e-05
      norm_type: rmsnorm
      # Decoder - Attention
      num_heads: 64
      attention_type: scaled_dot_product
      attention_module: multiquery_attention
      attention_dropout_rate: 0.0
      use_projection_bias_in_attention: false
      use_ffn_bias_in_attention: false
      extra_attention_params:
        num_kv_groups: 8
      # Decoder - ffn
      filter_size: 28672
      nonlinearity: swiglu
      use_ffn_bias: false
      # Task-specific
      use_bias_in_output: false
      loss_scaling: num_tokens
      loss_weight: 1.0
    optimizer:
      AdamW:
        betas:
        - 0.9
        - 0.95
        eps: 1.0e-05
        correct_bias: true
        weight_decay: 0.1
    schedulers:
    - SequentialLR:
        schedulers:
        - LinearLR:
            initial_learning_rate: 0.0
            end_learning_rate: 3.47e-05 # sqrt(batch_size / 1024) * 1.5e-4
            total_iters: 37236
        - CosineDecayLR:
            initial_learning_rate: 3.47e-05 # sqrt(batch_size / 1024) * 1.5e-4
            end_learning_rate: 3.47e-06 # sqrt(batch_size / 1024) * 1.5e-5
            total_iters: 8840601
    precision:
      # Cerebras parameters
      enabled: true
      fp16_type: cbfloat16
      loss_scaling_factor: dynamic
      max_gradient_norm: 1.0
    loop:
      max_steps: 8877837 # Llama v2 70B was trained on 2T tokens. # steps = 2T / (batch_size * 4096)
      eval_frequency: 10000
      eval_steps: 1674
    checkpoint:
      steps: 10000
      save_initial_checkpoint: true
    logging:
      # steps = 2T / (batch_size * 4096)
      log_steps: 1
    callbacks:
    - GlobalFlags:
        csx.debug.compile_crd_memory_gi: 67
        csx.debug.execute_crd_memory_gi: 50
  fit:
    train_dataloader:
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/llama_v2_data_test/val
      shuffle: false
      shuffle_seed: 1
      batch_size: 55
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true
    val_dataloader: &val_dataloader
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/llama_v2_data_test/test
      shuffle: false
      shuffle_seed: 1
      batch_size: 55
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true
  validate:
    val_dataloader: *val_dataloader
  validate_all:
    val_dataloaders: *val_dataloader
