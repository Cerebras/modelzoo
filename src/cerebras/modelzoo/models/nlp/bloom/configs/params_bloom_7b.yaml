# Copyright 2023 Cerebras Systems.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##############################################################
## Base configuration: BLOOM 7.1B model
##############################################################
trainer:
  init:
    backend:
      backend_type: CSX
    seed: 1
    model:
      name: "bloom"
      # Embedding
      vocab_size: 250880
      hidden_size: 4096
      position_embedding_type: alibi
      alibi_trainable_slopes: false
      share_embedding_weights: true
      max_position_embeddings: 2048
      embedding_layer_norm: true
      # Decoder
      num_hidden_layers: 30
      dropout_rate: 0.0
      layer_norm_epsilon: 1.0e-05
      # Decoder - Attention
      num_heads: 32
      attention_type: scaled_dot_product
      attention_dropout_rate: 0.0
      use_projection_bias_in_attention: true
      use_ffn_bias_in_attention: true
      # Decoder - ffn
      filter_size: 16384 # 4 * hidden_size
      nonlinearity: gelu
      use_ffn_bias: true # As set in https//github.com/huggingface/transformers/blob/d896029e273d118b29bea4ef24daa4d2c074c419/src/transformers/models/bloom/modeling_bloom.py#L379
      # Task-specific
      use_bias_in_output: false # As set in https//github.com/huggingface/transformers/blob/d896029e273d118b29bea4ef24daa4d2c074c419/src/transformers/models/bloom/modeling_bloom.py#L831
      loss_scaling: num_tokens
      loss_weight: 1.0
      embedding_initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.02
      initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.02
      output_layer_initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.02
    optimizer:
      AdamW:
        betas:
        - 0.9
        - 0.95
        eps: 1.0e-08
        weight_decay: 0.1
        correct_bias: true
    schedulers:
    - SequentialLR:
        schedulers:
        - LinearLR:
            initial_learning_rate: 0.0
            end_learning_rate: 5.26e-05 # sqrt(batch_size / 512) * 1.2e-4
            total_iters: 1848 # approx 375M tokens at batch size 99 and msl 2048
        - CosineDecayLR:
            initial_learning_rate: 5.26e-05 # sqrt(batch_size / 512) * (1.0e-5)
            end_learning_rate: 5.26e-06 # approx 410B tokens at batch size 99 and msl 2048
            total_iters: 2022181
        - ConstantLR:
            learning_rate: 2.84e-06
    precision:
      enabled: true
      # Cerebras parameters
      fp16_type: cbfloat16
      loss_scaling_factor: dynamic
      max_gradient_norm: 1.0
    loop:
      max_steps: 2024029 # BLOOM models are trained for approx 410B tokens
      eval_frequency: 10000
      eval_steps: 1873 # 185646 / batch_size - 1
    checkpoint:
      steps: 10000
    logging:
      log_steps: 100
    callbacks:
    - GlobalFlags:
        csx.debug.execute_crd_memory_gi: 45
    - ScopedTrainFlags:
        csx.performance.micro_batch_size: 135
    - ScopedValidateFlags:
        csx.performance.micro_batch_size: 135
  fit:
    train_dataloader:
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/bloom_data_test/val/
      shuffle: false
      shuffle_seed: 1337
      # The effective batch size, which is evenly divided across "num_csx" systems used for the run
      batch_size: 135
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true # Important to avoid seeding at each epoch
    val_dataloader: &val_dataloader
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/bloom_data_test/test/
      batch_size: 135
      shuffle: false
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true
  validate:
    val_dataloader: *val_dataloader
  validate_all:
    val_dataloaders: *val_dataloader
