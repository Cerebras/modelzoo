# Copyright 2022 Cerebras Systems.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

trainer:
  init:
    seed: 1
    backend:
      backend_type: CSX
      compile_only: false
      validate_only: false
    model:
      name: "gpt2"
      # Embedding
      vocab_size: 50257
      hidden_size: 1600
      position_embedding_type: learned
      share_embedding_weights: true
      max_position_embeddings: 1024
      # Encoder
      num_hidden_layers: 48
      dropout_rate: 0.1 # https//huggingface.co/transformers/v3.0.2/model_doc/gpt2.html
      layer_norm_epsilon: 1.0e-05 # change to 1.0e-12 for single precision training
      # Encoder - Attention
      num_heads: 16 # it was confirmed with authors that in fact it is 16 not 25
      attention_type: scaled_dot_product
      attention_dropout_rate: 0.1 # https//huggingface.co/transformers/v3.0.2/model_doc/gpt2.html
      # following attention & ffn biases are set using https://amaarora.github.io/2020/02/18/annotatedGPT2.html
      use_projection_bias_in_attention: true
      use_ffn_bias_in_attention: true
      # Encoder - ffn
      filter_size: 6400 # hidden_size * 4
      nonlinearity: gelu
      use_ffn_bias: true
      use_bias_in_output: false # As used in https//amaarora.github.io/2020/02/18/annotatedGPT2.html
      loss_scaling: num_tokens
      loss_weight: 1.0
      # Following TensorFlow which sets the bounds for truncated normal initialization to [-2*std, 2*std]
      # https://www.tensorflow.org/api_docs/python/tf/keras/initializers/TruncatedNormal
      embedding_initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.02
        a: -0.04
        b: 0.04
      initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.02
        a: -0.04
        b: 0.04
      output_layer_initializer:
        name: truncated_normal
        mean: 0.0
        std: 0.002041241452 # 0.02 / sqrt(2 * num_hidden_layers)
        a: -0.004082482904
        b: 0.004082482904
      # Cerebras parameters
      fp16_type: cbfloat16
      mixed_precision: true
    optimizer:
      AdamW:
        correct_bias: true
        weight_decay: 0.011 # https://nostalgebraist.tumblr.com/post/642136680709652480/gpt2s-weight-decay/amp
        betas:
        - 0.9
        - 0.999
    schedulers:
    # https://en.wikipedia.org/wiki/GPT-2
    - SequentialLR:
        schedulers:
        - LinearLR:
            initial_learning_rate: 0.0
            total_iters: 10779 # 2000 * 512/95 (warmup)
            end_learning_rate: 0.0001
        - CosineDecayLR:
            initial_learning_rate: 0.0001 # sqrt(95 / 512) * 0.00025
            end_learning_rate: 0
            total_iters: 3073099 # 3083878 - 10779
    precision:
      enabled: true
      # Cerebras parameters
      fp16_type: cbfloat16
      loss_scaling_factor: dynamic
      max_gradient_norm: 1.0
    loop:
      max_steps: 3083878 # 300000000000/(1024*512) * 512 / 95
      eval_frequency: 10000
      eval_steps: 77 # 7481/95 - 1
    checkpoint:
      steps: 10000
    logging:
      log_steps: 100
  fit:
    train_dataloader:
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/language/datasets/owt_pretraining_gpt_hdf5/train_8M_msl1024/
      # For high utilization in weight streaming, we estimate batch size >95 seqs
      # The effective batch size, which is evenly divided across "num_csx" systems used for the run
      batch_size: 95
      shuffle: false
      shuffle_seed: 1337
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true # Important to avoid seeding at each epoch
    val_dataloader: &val_dataloader
      data_processor: GptHDF5MapDataProcessor
      data_dir: ./shuffled/language/datasets/owt_pretraining_gpt_hdf5/val_msl1024/
      batch_size: 95
      shuffle: false
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true
  validate:
    val_dataloader: *val_dataloader
  validate_all:
    val_dataloaders: *val_dataloader
