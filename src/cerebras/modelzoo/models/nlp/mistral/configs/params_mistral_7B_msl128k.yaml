# Mistral model, 7B parameters, max_seq_length 131072
# Based on: https://mistral.ai/news/announcing-mistral-7b/

trainer:
  init:
    backend:
      backend_type: CSX
    model_dir: ./model_dir
    seed: 1
    model:
      name: "mistral"
      # Embedding
      vocab_size: 32000
      hidden_size: 4096
      position_embedding_type: rotary
      rotary_dim: 128
      share_embedding_weights: false
      max_position_embeddings: 131072
      embedding_dropout_rate: 0.0
      # Decoder
      num_hidden_layers: 32
      dropout_rate: 0.0
      layer_norm_epsilon: 1.0e-05
      norm_type: rmsnorm
      # Decoder - Attention
      num_heads: 32
      attention_type: scaled_dot_product
      attention_module: multiquery_attention
      extra_attention_params:
        num_kv_groups: 8
      attention_dropout_rate: 0.0
      use_projection_bias_in_attention: false
      use_ffn_bias_in_attention: false
      attention_sliding_window_length: 4096
      # Decoder - ffn
      filter_size: 14336
      nonlinearity: swiglu
      use_ffn_bias: false
      # Task-specific
      use_bias_in_output: false
    optimizer:
      AdamW:
        betas:
        - 0.9
        - 0.95
        correct_bias: true
        weight_decay: 0.1
    schedulers:
    - SequentialLR:
        schedulers:
        - LinearLR:
            initial_learning_rate: 0.0
            end_learning_rate: 3.0e-4
            total_iters: 2000
        - CosineDecayLR:
            initial_learning_rate: 3.0e-4
            end_learning_rate: 3.0e-05
            total_iters: 85
    precision:
      enabled: true
      # Cerebras parameters
      fp16_type: cbfloat16
      loss_scaling_factor: dynamic
      max_gradient_norm: 1.0
    loop:
      # We might want to adjust these later 
      max_steps: 20
      eval_steps: 178
    checkpoint:
      steps: 20
      save_initial_checkpoint: false
    logging:
      log_steps: 1
    callbacks:
    - ScopedTrainFlags:
        csx.performance.micro_batch_size: 1
    - ScopedValidateFlags:
        csx.performance.micro_batch_size: 1
  fit:
    train_dataloader:
      data_dir: ./datasets/long_msl/shuffled/mistral/msl_128k
      data_processor: GptHDF5MapDataProcessor
      # The effective batch size, which is evenly divided across "num_csx" systems used for the run
      batch_size: 32
      shuffle: true
      shuffle_seed: 1337
      num_workers: 8
      prefetch_factor: 10
      persistent_workers: true # Important to avoid seeding at each epoch
    val_dataloader: &val_dataloader
      data_dir: ./mistral_128k_pile/test/
      data_processor: GptHDF5DataProcessor
      batch_size: 32
      shuffle: false
      num_workers: 8
  validate:
    val_dataloader: *val_dataloader
  validate_all:
    val_dataloaders: *val_dataloader
